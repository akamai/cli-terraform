{{- /*gotype: github.com/akamai/cli-terraform/pkg/providers/papi.TFData*/ -}}
{{- if not .Property.PropertyID -}}
terraform {
  required_providers {
    akamai = {
      source  = "akamai/akamai"
      version = ">= 6.6.0"
    }
  }
  required_version = ">= 1.0"
}

provider "akamai" {
  edgerc = var.edgerc_path
  config_section = var.config_section
}

{{ end }}
{{- $useSplitDepth := .UseSplitDepth}}
{{- if and (not .Property.PropertyID) $useSplitDepth -}}
module "rules" {
  source = "./rules"
}
{{- end}}
{{- range $include := .Includes }}
{{- if not $.RulesAsHCL}}
data "akamai_property_rules_template" "rules_{{.IncludeName}}" {
  template_file = abspath("${path.module}/property-snippets/{{.IncludeName}}.json")
}
{{- end}}

/*
data "akamai_property_include_parents" "{{.IncludeName}}" {
  contract_id = "{{.ContractID}}"
  group_id    = "{{.GroupID}}"
  include_id  = "{{.IncludeID}}"
}
*/

resource "akamai_property_include" "{{.IncludeName}}" {
  contract_id = "{{.ContractID}}"
  group_id = "{{.GroupID}}"
  name = "{{.IncludeName}}"
  product_id = "{{.ProductID}}"
  type = "{{.IncludeType}}"
{{- if $.RulesAsHCL}}
{{- if $useSplitDepth}}
  rule_format = module.rules.rule_format_{{$include.RootRule}}
  rules       = module.rules.rules_{{$include.RootRule}}
{{- else}}
{{- if .Rules}}
  rule_format = data.akamai_property_rules_builder.{{(index .Rules 0).TerraformName}}.rule_format
  rules       = data.akamai_property_rules_builder.{{(index .Rules 0).TerraformName}}.json
{{- else}}
  rule_format = "{{.RuleFormat}}"
{{- end}}
{{- end}}
{{- else}}
  rule_format = "{{.RuleFormat}}"
  rules = data.akamai_property_rules_template.rules_{{.IncludeName}}.json
{{- end}}
}

{{- if $include.StagingInfo.HasActivation}}

resource "akamai_property_include_activation" "{{$include.IncludeName}}_staging" {
  contract_id = akamai_property_include.{{$include.IncludeName}}.contract_id
  group_id = akamai_property_include.{{$include.IncludeName}}.group_id
  include_id = akamai_property_include.{{$include.IncludeName}}.id
  network = "STAGING"
  auto_acknowledge_rule_warnings = false
  version = var.activate_latest_on_staging ? akamai_property_include.{{$include.IncludeName}}.latest_version : akamai_property_include.{{$include.IncludeName}}.staging_version
{{- if $include.StagingInfo.ActivationNote}}
  note = {{template "Text" $include.StagingInfo.ActivationNote}}
{{- end}}
  notify_emails = [{{range $index, $element := $include.StagingInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
}
{{- else}}

#resource "akamai_property_include_activation" "{{$include.IncludeName}}_staging" {
#  contract_id = akamai_property_include.{{$include.IncludeName}}.contract_id
#  group_id = akamai_property_include.{{$include.IncludeName}}.group_id
#  include_id = akamai_property_include.{{$include.IncludeName}}.id
#  network = "STAGING"
#  auto_acknowledge_rule_warnings = false
#  version = var.activate_latest_on_staging ? akamai_property_include.{{$include.IncludeName}}.latest_version : akamai_property_include.{{$include.IncludeName}}.staging_version
{{- if $include.StagingInfo.ActivationNote}}
#  note = {{template "Text" $include.StagingInfo.ActivationNote}}
{{- end}}
#  notify_emails = [{{range $index, $element := $include.StagingInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
#}
{{- end}}
{{- if $include.ProductionInfo.HasActivation}}

resource "akamai_property_include_activation" "{{$include.IncludeName}}_production" {
  contract_id = akamai_property_include.{{$include.IncludeName}}.contract_id
  group_id = akamai_property_include.{{$include.IncludeName}}.group_id
  include_id = akamai_property_include.{{$include.IncludeName}}.id
  network = "PRODUCTION"
  auto_acknowledge_rule_warnings = false
  version = var.activate_latest_on_production ? akamai_property_include.{{$include.IncludeName}}.latest_version : akamai_property_include.{{$include.IncludeName}}.production_version
{{- if $include.ProductionInfo.ActivationNote}}
  note = {{template "Text" $include.ProductionInfo.ActivationNote}}
{{- end}}
  notify_emails = [{{range $index, $element := $include.ProductionInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
}
{{- else}}

#resource "akamai_property_include_activation" "{{$include.IncludeName}}_production" {
#  contract_id = akamai_property_include.{{$include.IncludeName}}.contract_id
#  group_id = akamai_property_include.{{$include.IncludeName}}.group_id
#  include_id = akamai_property_include.{{$include.IncludeName}}.id
#  network = "PRODUCTION"
#  auto_acknowledge_rule_warnings = false
#  version = var.activate_latest_on_production ? akamai_property_include.{{$include.IncludeName}}.latest_version : akamai_property_include.{{$include.IncludeName}}.production_version
{{- if $include.ProductionInfo.ActivationNote}}
#  note = {{template "Text" $include.ProductionInfo.ActivationNote}}
{{- end}}
#  notify_emails = [{{range $index, $element := $include.ProductionInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
#}
{{- end}}

{{- end}}