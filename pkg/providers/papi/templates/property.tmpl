{{- /*gotype: github.com/akamai/cli-terraform/v2/pkg/providers/papi.TFData*/ -}}
terraform {
  required_providers {
    akamai = {
      source  = "akamai/akamai"
      version = ">= 8.1.0"
    }
  }
  required_version = ">= 1.0"
}

provider "akamai" {
  edgerc = var.edgerc_path
  config_section = var.config_section
}
{{- if .UseSplitDepth}}

module "rules" {
  source = "./rules"
}
{{- end}}
{{- if not .RulesAsHCL}}

data "akamai_property_rules_template" "rules" {
  template_file = abspath("${path.module}/property-snippets/main.json")
}{{end}}
{{range .Property.EdgeHostnames}}
resource "akamai_edge_hostname" "{{.EdgeHostnameResourceName}}" {
  contract_id   = var.contract_id
  group_id      = var.group_id
  ip_behavior   = "{{.IPv6}}"
  edge_hostname = "{{.EdgeHostname}}"
{{- if .TTL}}
  ttl           = {{.TTL}}
{{- end}}
{{- if .CertificateID}}
  certificate = {{.CertificateID}}
{{- end}}
{{- if .UseCases}}
  use_cases = jsonencode({{.UseCases}})
{{- end}}
}
{{end}}

{{- if .UseBootstrap}}
resource "akamai_property_bootstrap" "{{.Property.PropertyResourceName}}" {
  name = "{{.Property.PropertyName}}"
  contract_id = var.contract_id
  group_id = var.group_id
  product_id = "prd_{{.Property.ProductName}}"
{{- if .Property.HostnameBucket}}
  use_hostname_bucket = true
{{- end}}
}
{{end}}
resource "akamai_property" "{{.Property.PropertyResourceName}}" {
{{- if .UseBootstrap}}
  property_id = akamai_property_bootstrap.{{.Property.PropertyResourceName}}.id
  name = akamai_property_bootstrap.{{.Property.PropertyResourceName}}.name
  contract_id = akamai_property_bootstrap.{{.Property.PropertyResourceName}}.contract_id
  group_id = akamai_property_bootstrap.{{.Property.PropertyResourceName}}.group_id
  product_id = akamai_property_bootstrap.{{.Property.PropertyResourceName}}.product_id
{{- if .Property.HostnameBucket}}
  use_hostname_bucket = akamai_property_bootstrap.{{.Property.PropertyResourceName}}.use_hostname_bucket
{{- end}}
{{- else}}
  name = "{{.Property.PropertyName}}"
  contract_id = var.contract_id
  group_id = var.group_id
  product_id = "prd_{{.Property.ProductName}}"
{{- if .Property.HostnameBucket}}
  use_hostname_bucket = true
{{- end}}
{{- end}}
{{- range .Property.Hostnames}}
  hostnames {
    cname_from = "{{.CnameFrom}}"
    {{- if .IsActive}}
      cname_to = akamai_edge_hostname.{{.EdgeHostnameResourceName}}.edge_hostname
    {{- else}}
      cname_to = "{{.CnameTo}}"
    {{- end}}
    cert_provisioning_type = "{{.CertProvisioningType}}"
  }
{{- end}}
{{- if .RulesAsHCL}}
{{- if .UseSplitDepth}}
  rule_format = module.rules.rule_format
  rules       = module.rules.rules
{{- else}}
  rule_format = data.akamai_property_rules_builder.{{(index .Rules 0).TerraformName}}.rule_format
  rules       = data.akamai_property_rules_builder.{{(index .Rules 0).TerraformName}}.json
{{- end}}
{{- else}}
  rule_format = "{{.Property.RuleFormat}}"
  rules       = data.akamai_property_rules_template.rules.json
{{- end}}
}

# NOTE: Be careful when removing this resource as you can disable traffic
{{- if .Property.StagingInfo.HasActivation}}
resource "akamai_property_activation" "{{.Property.PropertyResourceName}}-staging" {
  property_id                    = akamai_property.{{.Property.PropertyResourceName}}.id
  contact                        = [{{range $index, $element := .Property.StagingInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
  version                        = var.activate_latest_on_staging ? akamai_property.{{.Property.PropertyResourceName}}.latest_version : akamai_property.{{.Property.PropertyResourceName}}.staging_version
  network                        = "STAGING"
{{- if .Property.StagingInfo.ActivationNote}}
  note                           = {{template "Text" .Property.StagingInfo.ActivationNote}}
{{- end}}
  auto_acknowledge_rule_warnings = false
}
{{ else}}
#resource "akamai_property_activation" "{{.Property.PropertyResourceName}}-staging" {
#  property_id                    = akamai_property.{{.Property.PropertyResourceName}}.id
#  contact                        = [{{range $index, $element := .Property.StagingInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
#  version                        = var.activate_latest_on_staging ? akamai_property.{{.Property.PropertyResourceName}}.latest_version : akamai_property.{{.Property.PropertyResourceName}}.staging_version
#  network                        = "STAGING"
{{- if .Property.StagingInfo.ActivationNote}}
#  note                           = {{template "Text" .Property.StagingInfo.ActivationNote}}
{{- end}}
#  auto_acknowledge_rule_warnings = false
#}
{{ end}}
# NOTE: Be careful when removing this resource as you can disable traffic
{{- if .Property.ProductionInfo.HasActivation}}
resource "akamai_property_activation" "{{.Property.PropertyResourceName}}-production" {
  property_id                    = akamai_property.{{.Property.PropertyResourceName}}.id
  contact                        = [{{range $index, $element := .Property.ProductionInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
  version                        = var.activate_latest_on_production ? akamai_property.{{.Property.PropertyResourceName}}.latest_version : akamai_property.{{.Property.PropertyResourceName}}.production_version
  network                        = "PRODUCTION"
{{- if .Property.ProductionInfo.ActivationNote}}
  note                           = {{template "Text" .Property.ProductionInfo.ActivationNote}}
{{- end}}
  auto_acknowledge_rule_warnings = false
}
{{ else}}
#resource "akamai_property_activation" "{{.Property.PropertyResourceName}}-production" {
#  property_id                    = akamai_property.{{.Property.PropertyResourceName}}.id
#  contact                        = [{{range $index, $element := .Property.ProductionInfo.Emails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
#  version                        = var.activate_latest_on_production ? akamai_property.{{.Property.PropertyResourceName}}.latest_version : akamai_property.{{.Property.PropertyResourceName}}.production_version
#  network                        = "PRODUCTION"
{{- if .Property.ProductionInfo.ActivationNote}}
#  note                           = {{template "Text" .Property.ProductionInfo.ActivationNote}}
{{- end}}
#  auto_acknowledge_rule_warnings = false
#}
{{ end}}
{{- if and (.Property.HostnameBucket) (.Property.HostnameBucket.HasStagingActivation)}}
resource "akamai_property_hostname_bucket" "{{.Property.PropertyResourceName}}-hostname-bucket-staging" {
  property_id   = akamai_property_activation.{{.Property.PropertyResourceName}}-staging.property_id
  contract_id   = var.contract_id
  group_id      = var.group_id
  network       = "STAGING"
  {{- if .Property.HostnameBucket.StagingNote}}
  note          = "{{.Property.HostnameBucket.StagingNote}}"
  {{- end}}
  {{- if .Property.HostnameBucket.StagingNotifyEmails}}
  notify_emails = [{{range $index, $element := .Property.HostnameBucket.StagingNotifyEmails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
  {{- end}}
  hostnames     = {
  for hostname in local.hostnames :
  hostname.cname_from => {
    cert_provisioning_type = hostname.cert_provisioning_type
    edge_hostname_id       = hostname.edge_hostname_id
  }
  if hostname.staging == true
  }
}
{{ end}}
{{- if and (.Property.HostnameBucket) (.Property.HostnameBucket.HasProductionActivation)}}
resource "akamai_property_hostname_bucket" "{{.Property.PropertyResourceName}}-hostname-bucket-production" {
  property_id   = akamai_property_activation.{{.Property.PropertyResourceName}}-production.property_id
  contract_id   = var.contract_id
  group_id      = var.group_id
  network       = "PRODUCTION"
  {{- if .Property.HostnameBucket.ProductionNote}}
  note          = "{{.Property.HostnameBucket.ProductionNote}}"
  {{- end}}
  {{- if .Property.HostnameBucket.ProductionNotifyEmails}}
  notify_emails = [{{range $index, $element := .Property.HostnameBucket.ProductionNotifyEmails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
  {{- end}}
  hostnames     = {
  for hostname in local.hostnames :
  hostname.cname_from => {
    cert_provisioning_type = hostname.cert_provisioning_type
    edge_hostname_id       = hostname.edge_hostname_id
  }
  if hostname.production == true
  }
}
{{- end}}