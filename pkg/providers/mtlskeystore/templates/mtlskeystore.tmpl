{{- /*gotype: github.com/akamai/cli-terraform/v2/pkg/providers/mtlskeystore.TFData*/ -}}
terraform {
  required_providers {
    akamai = {
      source  = "akamai/akamai"
      version = ">= 8.1.0"
    }
  }
  required_version = ">= 1.0"
}

provider "akamai" {
  edgerc         = var.edgerc_path
  config_section = var.config_section
}

{{ if eq .Certificate.Signer "AKAMAI" -}}
resource "akamai_mtlskeystore_client_certificate_akamai" "{{.Certificate.ResourceName}}" {
  certificate_name = "{{.Certificate.Name}}"
  contract_id      = "{{.Certificate.ContractID}}"
  group_id         = {{.Certificate.GroupID}}
  geography        = "{{.Certificate.Geography}}"
  key_algorithm   = "{{.Certificate.KeyAlgorithm}}"
  notification_emails = [{{range $index, $element := .Certificate.NotificationEmails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
  secure_network = "{{.Certificate.SecureNetwork}}"
  subject = "{{.Certificate.Subject}}"
}
{{- else -}}
resource "akamai_mtlskeystore_client_certificate_third_party" "{{.Certificate.ResourceName}}" {
  certificate_name = "{{.Certificate.Name}}"
  contract_id      = "{{.Certificate.ContractID}}"
  group_id         = {{.Certificate.GroupID}}
  geography        = "{{.Certificate.Geography}}"
  key_algorithm   = "{{.Certificate.KeyAlgorithm}}"
  notification_emails = [{{range $index, $element := .Certificate.NotificationEmails}}{{if $index}}, {{end}}"{{$element}}"{{end}}]
  secure_network = "{{.Certificate.SecureNetwork}}"
  subject = "{{.Certificate.Subject}}"
  versions = {
    {{- $sz := len .Certificate.Versions | getLastIndex}}
    {{- range $i, $version := .Certificate.Versions}}
      "{{ $version.CreatedDate }}_v{{ $version.Version }}" = {} {{- if ne $i $sz}},{{end -}}
    {{- end}}
  }
}
{{- end}}